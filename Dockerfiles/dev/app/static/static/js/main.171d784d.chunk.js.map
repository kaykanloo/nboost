{"version":3,"sources":["theme/palette.ts","theme/typography.ts","theme/overrides/index.ts","theme/overrides/muiInput.tsx","theme/overrides/muiFormLabel.tsx","theme/index.ts","components/layout/root.tsx","components/layout/elasticSearch/searchResultGrid.tsx","utilities/history.ts","services/httpService.ts","services/searchService.ts","containers/containers/bodyContainer.tsx","containers/containers/elasticSearch/elasticSearchContainer.tsx","pages/home.tsx","hooks/useDebounce.ts","utilities/paths.ts","routes.tsx","store/ui/reducer.ts","store/ui/types.ts","store/ui/action.ts","store/ui/selector.ts","containers/containers/snackbar/snackbar.tsx","App.tsx","serviceWorker.ts","index.tsx","configureStore.ts","utilities/sessionStorage.ts","store/index.ts"],"names":["white","black","orangeDark","orangeDarker","orangeLight","orangeMain","whiteOff","primary","main","colors","blue","contrastText","secondary","success","dark","green","light","info","warning","orange","error","red","text","link","header","background","paper","icon","divider","body1","marginBottom","fontSize","body2","h1","marginTop","paddingBottom","color","palette","fontWeight","borderBottom","h2","margin","letterSpacing","lineHeight","h3","h4","h5","h6","subtitle1","subtitle2","paragraph","button","caption","MuiInput","root","underline","MuiFormLabel","theme","createMuiTheme","typography","overrides","zIndex","appBar","drawer","useStyles","makeStyles","Root","children","classes","className","parse","require","body","flex","display","SearchResultGrid","data","console","log","_source","content","baseUrl","document","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","axios","interceptors","response","use","status","push","Promise","reject","errorHandler","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndPoint","window","location","href","searchResults","path","http","getBookIds","BodyContainer","ElasticSearchContainer","title","hits","Typography","variant","length","map","hit","padding","spacing","transition","transitions","create","easing","sharp","duration","leavingScreen","formControl","minWidth","initialData","total","connector","connect","dispatch","bindActionCreators","withRouter","React","useState","books","setBooks","searchTerm","setSearchTerm","searchBook","setSearchBook","results","setResults","nBoostResults","setNBoostResults","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","a","bookList","getBooks","all","data1","data2","getSearchResults","AppBar","position","Container","Toolbar","FormControl","InputLabel","htmlFor","Select","onChange","e","target","inputProps","name","id","b","index","TextField","label","fullWidth","Grid","container","item","xs","Paper","style","Paths","exact","component","Home","initialState","snackbar","snackbarMessage","snackbarState","snackbarType","reducer","state","action","type","message","clearSnackbarAction","getSnackbar","createSelector","Alert","props","elevation","width","ui","clearSnackbar","handleClose","event","reason","Snackbar","open","autoHideDuration","onClose","severity","App","store","ThemeProvider","CssBaseline","Boolean","hostname","match","INITIAL_REDUX_STATE","serializedState","sessionStorage","getItem","JSON","err","loadState","composeEnhancers","composeWithDevTools","createStore","combineReducers","UiReducer","router","connectRouter","createRootReducer","applyMiddleware","routerMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.171d784d.chunk.js","sourcesContent":["import { colors } from '@material-ui/core';\r\n\r\nconst black = '#000000';\r\nconst blackGrey = \"#202020\";\r\nconst orangeDark = \"#C84C04\";\r\nconst orangeDarker = \"#AF4103\";\r\nconst orangeLight = \"#EE6029\";\r\nconst orangeMain = \"#DB5205\";\r\nconst white = '#FFFFFF';\r\nconst whiteOff = '#f6f6f6';\r\n\r\nexport default {\r\n  black,\r\n  orangeDark,\r\n  orangeDarker,\r\n  orangeLight,\r\n  orangeMain,\r\n  white,\r\n  whiteOff,\r\n  primary: {\r\n    main: colors.blue[600],\r\n    contrastText: white,\r\n  },\r\n  secondary: {\r\n    main: white,\r\n    contrastText: orangeMain,\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: blackGrey,\r\n    secondary: blackGrey,\r\n    link: orangeDark,\r\n    header: orangeMain\r\n  },\r\n  background: {\r\n    paper: white\r\n  },\r\n  icon: orangeMain,\r\n  divider: blackGrey,\r\n  colors: {\r\n    orangeDarker: orangeDarker,\r\n  }\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n    body1: {\r\n        marginBottom: \"1.5em !important\",\r\n        fontSize: \"0.875rem\",\r\n    },\r\n    body2: {\r\n        fontSize: \"0.875rem\",\r\n    },\r\n    h1: {\r\n        marginBottom: \"20.125rempx\",\r\n        marginTop: \"0.625rem\",\r\n        paddingBottom: \"0.9375rem\",\r\n        color: palette.text.primary,\r\n        fontSize: \"1.6em\",\r\n        fontWeight: 100,\r\n        borderBottom:\"0.0625rem solid black\",\r\n    },\r\n    h2: {\r\n        margin: \"1.25rem 0\",\r\n        color: palette.text.primary,\r\n        fontSize: '1.4em',\r\n        fontWeight: 500,\r\n        letterSpacing: '-0.015em',\r\n        lineHeight: '1.75rem',\r\n    },\r\n    h3: {\r\n        margin: \"1.25rem 0\",\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '1.2em',\r\n        letterSpacing: '-0.015em',\r\n        lineHeight: '1.75rem',\r\n    },\r\n    h4: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '1.25rem',\r\n        letterSpacing: '-0.015em',\r\n        lineHeight: '1.5rem'\r\n    },\r\n    h5: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '1rem',\r\n        letterSpacing: '-0.015em',\r\n        lineHeight: '1.25rem'\r\n    },\r\n    h6: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '0.875rem',\r\n        letterSpacing: '-0.015em',\r\n        lineHeight: '1.25rem'\r\n    },\r\n    subtitle1: {\r\n        color: palette.text.primary,\r\n        fontSize: '1rem',\r\n        letterSpacing: '-0.015em',\r\n        lineHeight: '1.5625rem'\r\n    },\r\n    subtitle2: {\r\n        color: palette.text.secondary,\r\n        fontWeight: 400,\r\n        fontSize: '0.875rem',\r\n        letterSpacing: '-0.015em',\r\n        lineHeight: '1.3125rem'\r\n    },\r\n    paragraph: {\r\n        marginBottom: \"1.5em\",\r\n        fontSize: \"2.75rem\",\r\n    },\r\n    button: {\r\n        color: palette.text.primary,\r\n        fontWeight: 500,\r\n        fontSize: '1rem',\r\n        lineHeight: 1.4,\r\n    },\r\n    caption: {\r\n        color: palette.text.secondary,\r\n        fontSize: '0.6875rem',\r\n        letterSpacing: '0.008em',\r\n        lineHeight: '0.8125rem'\r\n    }\r\n};\r\n","import MuiInput from './muiInput';\r\nimport MuiFormLabel from './muiFormLabel';\r\nexport default {\r\n    MuiInput,\r\n    MuiFormLabel\r\n\r\n}","\r\nexport default {\r\n    root: {\r\n        fontSize: \"1em\",\r\n        color:\"white\",\r\n        \"&:placeholder\": {\r\n            color: \"white\"\r\n          },\r\n        \"&:before\": {\r\n            borderBottom: `1px solid white`\r\n          }\r\n    },\r\n    underline:{\r\n        color:\"white\",\r\n        \"&:placeholder\": {\r\n            color: \"white\"\r\n          },\r\n        \"&:before\": {\r\n            borderBottom: `1px solid white`\r\n          }\r\n    }\r\n  };\r\n  ","\r\nexport default {\r\n    root: {\r\n        color:\"white\"\r\n    }\r\n  };\r\n  ","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  }\r\n}));\r\n\r\ninterface RootProps {\r\n  className?: string;\r\n}\r\n\r\nconst Root: React.FC<RootProps> = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.root}>{children}</div>;\r\n};\r\n\r\nexport default Root;\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper } from \"@material-ui/core\";\r\nvar parse = require('html-react-parser');\r\nconst useStyles = makeStyles(theme => ({\r\n    body: {\r\n        flex: \"1 1 auto\",\r\n        display: \"flex\",\r\n\r\n    }\r\n}));\r\n\r\ninterface RootProps {\r\n    className?: string;\r\n    data: any\r\n}\r\n\r\nconst SearchResultGrid: React.FC<RootProps> = ({ data }) => {\r\n    const classes = useStyles();\r\n    console.log(data)\r\n    return (\r\n        <React.Fragment>\r\n                {data._source &&\r\n                    parse(data._source.content)\r\n                }\r\n            <hr/>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default SearchResultGrid;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nconst baseUrl: string = document.getElementsByTagName('base')[0].getAttribute('href') || \"\";\r\n\r\nexport const history = createBrowserHistory({ basename: baseUrl });\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { history } from 'utilities/history';\r\n\r\nconst errorHandler = (error: any) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n  }\r\n  if (error.response.status === 401) {\r\n    history.push(\"/login\");\r\n  }\r\n  else if (error.response.status === 406) {\r\n  }\r\n  else {\r\n    history.push(\"/error-page\");\r\n  }\r\n  return Promise.reject(error);\r\n}\r\n\r\nconst successHandler = (response: AxiosResponse<any>) => {\r\n  return response\r\n}\r\n\r\naxios.interceptors.response.use(\r\n  response => successHandler(response),\r\n  error => errorHandler(error)\r\n)\r\n\r\nfunction setJwt(jwt:any) {\r\n  axios.defaults.headers.common[\"X-auth-token\"] = jwt;\r\n  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\nconst apiEndPoint = `${window.location.href}`;\r\n\r\nexport function searchResults(path: string) {\r\n    return http.get(apiEndPoint + `${path}`);\r\n}\r\n\r\nexport function getBookIds(){\r\n    return http.get(apiEndPoint + `_cat/indices?format=json`);\r\n}\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    body: {\r\n        flex: \"1 1 auto\",\r\n        display: \"flex\",\r\n        \r\n    }\r\n}));\r\n\r\ninterface RootProps {\r\n    className?: string;\r\n}\r\n\r\nconst BodyContainer: React.FC<RootProps> = ({ children }) => {\r\n    const classes = useStyles();\r\n\r\n    return <div className={classes.body}>{children}</div>;\r\n};\r\n\r\nexport default BodyContainer;\r\n","import * as React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { SearchResultGrid } from \"components/layout/elasticSearch\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    body: {\r\n        flex: \"1 1 auto\",\r\n        display: \"flex\",\r\n\r\n    }\r\n}));\r\n\r\ninterface RootProps {\r\n    className?: string;\r\n    title: string\r\n    data: any\r\n}\r\n\r\nconst ElasticSearchContainer: React.FC<RootProps> = ({ data, title }) => {\r\n    const classes = useStyles();\r\n    const { hits } = data;\r\n    return (\r\n        <React.Fragment>\r\n            <Typography variant =\"h2\">{title}</Typography>\r\n            {hits && hits.hits.length > 0 &&\r\n                hits.hits.map((hit: any) => {\r\n                    console.log(hit)\r\n                    return (\r\n                        <SearchResultGrid\r\n                            data={hit}\r\n                        />\r\n                    )\r\n                })\r\n\r\n            }\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default ElasticSearchContainer;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport { makeStyles, Container, Grid, Paper, AppBar, Toolbar, IconButton, Typography, TextField, Button, FormControl, InputLabel, Select } from '@material-ui/core';\r\nimport { ApplicationState } from 'store';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\n\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { withRouter, RouteComponentProps } from 'react-router';\r\n\r\nimport { SearchResultGrid } from 'components/layout/elasticSearch';\r\nimport { searchResults, getBookIds } from 'services/searchService';\r\nimport { ElasticSearchContainer } from 'containers/containers';\r\nimport useDebounce from 'hooks/useDebounce';    \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    main: {\r\n        marginTop: \"90px\"\r\n    },\r\n    button: {\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}))\r\n\r\ninterface IProps extends RouteComponentProps<{ id?: string }>,\r\n    ConnectedProps<typeof connector> {\r\n}\r\n\r\ninterface ISearchResult {\r\n    hits: {\r\n        hits: any[],\r\n        total: number\r\n    }\r\n}\r\n\r\nconst initialData = { hits: { hits: [], total: 0 } };\r\nconst Home: React.FC<IProps> = ({ }) => {\r\n    const classes = useStyles();\r\n    const [books, setBooks] = React.useState([]);\r\n    const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n    const [searchBook, setSearchBook] = React.useState(\"\");\r\n    const [results, setResults] = React.useState<ISearchResult>(initialData);\r\n    const [nBoostResults, setNBoostResults] = React.useState<ISearchResult>(initialData);\r\n\r\n    const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n    useEffect(() => {\r\n        async function getBooks() {\r\n            const bookList = await getBookIds();\r\n            setBooks(bookList.data);\r\n        }\r\n        getBooks();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function getSearchResults() {\r\n            if (searchBook != \"\") {\r\n                try {\r\n                    const [data1, data2] = await Promise.all([\r\n                        searchResults(`${searchBook}/_search?q=${searchTerm}`),\r\n                        searchResults(`${searchBook}/_search?q=${searchTerm}&no_rerank=true`),\r\n                    ]);\r\n                    setResults(data2.data);\r\n                    setNBoostResults(data1.data);\r\n                } catch (err) {\r\n                }\r\n            }\r\n        }\r\n        if (debouncedSearchTerm) {\r\n            getSearchResults();\r\n        } else {\r\n            setResults(initialData);\r\n            setNBoostResults(initialData);\r\n        }\r\n    }, [debouncedSearchTerm, searchBook]);\r\n\r\n    function onSelect(e: any) {\r\n        setSearchBook(e.target.value);\r\n    }\r\n\r\n    function onChange(e: any) {\r\n        setSearchTerm(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={classes.appBar}\r\n            >\r\n                <Container>\r\n                    <Toolbar>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel htmlFor=\"book-list\">Indices</InputLabel>\r\n                            <Select\r\n                                value={searchBook}\r\n                                onChange={onSelect}\r\n                                inputProps={{\r\n                                    name: 'book',\r\n                                    id: 'book-list',\r\n                                }}\r\n                            >\r\n                                {books && books.map((b: any) => (\r\n                                    <option value={b.index}>{b.index}</option>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField id=\"outlined-basic\" onChange={onChange} label=\"Enter text\" className={classes.button} fullWidth />\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n\r\n            <Container className={classes.main}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography variant=\"h3\">Total hits: {results.hits ? results.hits.total : 0}</Typography>\r\n                            <Typography variant=\"h3\">Search query: <span style={{ color: \"red\" }}>{debouncedSearchTerm}</span></Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    {results.hits.total !== 0 &&\r\n                        <Grid item xs={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <ElasticSearchContainer\r\n                                    data={results}\r\n                                    title=\"Elastic Search\"\r\n                                />\r\n                            </Paper>\r\n                        </Grid>\r\n                    }\r\n                    {nBoostResults.hits.total !== 0 &&\r\n                        <Grid item xs={6}>\r\n                            <Paper className={classes.paper}>\r\n                                <ElasticSearchContainer\r\n                                    data={nBoostResults}\r\n                                    title=\"NBoost\"\r\n                                />\r\n                            </Paper>\r\n                        </Grid>\r\n                    }\r\n                </Grid>\r\n            </Container>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ }: ApplicationState) => ({\r\n\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n}, dispatch);\r\n\r\nconst connector = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)\r\n\r\nexport default withRouter(connector(Home));","import React, { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nexport default function useDebounce(value: any, delay: number) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(\r\n        () => {\r\n            // Set debouncedValue to value (passed in) after the specified delay\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n\r\n            // Return a cleanup function that will be called every time ...\r\n            // ... useEffect is re-called. useEffect will only be re-called ...\r\n            // ... if value changes (see the inputs array below). \r\n            // This is how we prevent debouncedValue from changing if value is ...\r\n            // ... changed within the delay period. Timeout gets cleared and restarted.\r\n            // To put it in context, if the user is typing within our app's ...\r\n            // ... search box, we don't want the debouncedValue to update until ...\r\n            // ... they've stopped typing for more than 500ms.\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n        // Only re-call effect if value changes\r\n        // You could also add the \"delay\" var to inputs array if you ...\r\n        // ... need to be able to change that dynamically.\r\n        [value]\r\n    );\r\n\r\n    return debouncedValue;\r\n}\r\n","export const Paths: { [key: string]: string } = {\r\n    HOME: \"/\"\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Root } from 'components/layout';\r\nimport { Home} from 'pages';\r\nimport { BodyContainer } from 'containers/containers';\r\nimport { Paths } from 'utilities/paths';\r\nimport { ConnectedProps, connect } from 'react-redux';\r\nimport { ApplicationState } from 'store';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport ProtectedRoute from 'hoc/protectedRoutes';\r\n\r\ninterface IProps extends ConnectedProps<typeof connector> {\r\n}\r\n\r\nconst Routes: React.FC<IProps> = ({  }) => {\r\n    return (\r\n        <Root>\r\n            <BodyContainer>\r\n                <Switch>\r\n                    <Route exact path={Paths.HOME} component={Home} />\r\n                    \r\n                    <Route component={() => <div>Not Found</div>} />\r\n                </Switch>\r\n            </BodyContainer>\r\n        </Root>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({  }: ApplicationState) => ({\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n\r\n}, dispatch);\r\n\r\nconst connector = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)\r\n\r\nexport default connector(Routes);","\r\nimport { IUiState, SHOW_ERROR_SNACKBAR, UiActionTypes, SHOW_SUCCESS_SNACKBAR, CLEAR_SNACKBAR } from './types';\r\n\r\n/**\r\n * UI Reducer\r\n */\r\n\r\nexport const initialState: IUiState = {\r\n    snackbar: {\r\n        snackbarMessage: \"Success!\",\r\n        snackbarState: false,\r\n        snackbarType: \"success\"\r\n    }\r\n}\r\n\r\nfunction reducer(state = initialState, action: UiActionTypes): IUiState {\r\n    switch (action.type) {\r\n        case SHOW_ERROR_SNACKBAR: {\r\n            return {\r\n                ...state,\r\n                snackbar: {\r\n                    snackbarMessage: action.message,\r\n                    snackbarType: \"error\",\r\n                    snackbarState: true\r\n                }\r\n            }\r\n        }\r\n        case SHOW_SUCCESS_SNACKBAR: {\r\n            return {\r\n                ...state,\r\n                snackbar: {\r\n                    snackbarMessage: action.message,\r\n                    snackbarType: \"success\",\r\n                    snackbarState: true\r\n                }\r\n            }\r\n        }\r\n        case CLEAR_SNACKBAR: {\r\n            return {\r\n                ...state,\r\n                snackbar: {\r\n                    ...state.snackbar,\r\n                    snackbarState: false\r\n                }\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport { reducer as UiReducer }","\r\n\r\nexport const SHOW_SUCCESS_SNACKBAR = '@@ui/SHOW_SUCCESS_SNACKBAR';\r\nexport const SHOW_ERROR_SNACKBAR = '@@ui/SHOW_ERROR_SNACKBAR';\r\nexport const CLEAR_SNACKBAR = '@@ui/CLEAR_SNACKBAR';\r\n\r\n\r\nexport interface ISnackbarState{\r\n    readonly snackbarState: boolean\r\n    readonly snackbarMessage: string\r\n    readonly snackbarType: \"success\" | \"info\" | \"warning\" | \"error\"\r\n}\r\n\r\nexport interface IUiState {\r\n    readonly snackbar: ISnackbarState\r\n}\r\n\r\nexport interface IShowSuccessSnackbar {\r\n    type: typeof SHOW_SUCCESS_SNACKBAR\r\n    message: string\r\n}\r\n\r\nexport interface IShowErrorSnackbar {\r\n    type: typeof SHOW_ERROR_SNACKBAR\r\n    message: string\r\n}\r\n\r\nexport interface IClearSnackbar {\r\n    type: typeof CLEAR_SNACKBAR\r\n}\r\n\r\nexport type UiActionTypes = IShowErrorSnackbar | IShowSuccessSnackbar | IClearSnackbar;","import { Thunk } from 'store';\r\n\r\nimport { SHOW_ERROR_SNACKBAR, SHOW_SUCCESS_SNACKBAR, CLEAR_SNACKBAR } from './types';\r\n\r\nexport function showErrorSnackbarAction(message: string): Thunk {\r\n    return async dispatch => {\r\n        await dispatch({\r\n            type: SHOW_ERROR_SNACKBAR,\r\n            message: message\r\n        })\r\n    }\r\n}\r\nexport function showSuccessSnackbarAction(message: string): Thunk {\r\n    return async dispatch => {\r\n        await dispatch({\r\n            type: SHOW_SUCCESS_SNACKBAR,\r\n            message: message\r\n        })\r\n    }\r\n}\r\n\r\nexport function clearSnackbarAction(): Thunk {\r\n    return async dispatch => {\r\n        await dispatch({\r\n            type: CLEAR_SNACKBAR\r\n        })\r\n    }\r\n}","import { createSelector } from 'reselect';\r\nimport { IUiState, ISnackbarState } from './types';\r\n\r\nconst _getSnackbar = (state: IUiState) => state.snackbar;\r\n\r\nexport const getSnackbar = createSelector(\r\n    [_getSnackbar],\r\n    (snackbar: ISnackbarState) => {\r\n        return snackbar;\r\n    }\r\n)\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { ApplicationState } from 'store';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { connect, ConnectedProps } from 'react-redux';\r\nimport { getSnackbar, clearSnackbarAction } from 'store/ui';\r\n\r\ninterface IProps extends ConnectedProps<typeof connector> {\r\n}\r\n\r\n\r\nconst Alert = (props: AlertProps) => {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\nconst CustomSnackbar: React.FC<IProps> = ({ snackbar, clearSnackbar }) => {\r\n    const classes = useStyles();\r\n\r\n    function handleClose(event?: React.SyntheticEvent, reason?: string) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        clearSnackbar();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar open={snackbar.snackbarState} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={snackbar.snackbarType}>\r\n                    {snackbar.snackbarMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ ui }: ApplicationState) => ({\r\n    snackbar: getSnackbar(ui)\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n    clearSnackbar: clearSnackbarAction\r\n}, dispatch);\r\n\r\nconst connector = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)\r\nexport default connector(CustomSnackbar);\r\n","import React from 'react';\r\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\r\nimport { ApplicationState } from 'store';\r\nimport { Store } from 'redux';\r\nimport { History } from 'history';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { ConnectedRouter } from 'connected-react-router';\r\n\r\nimport theme from 'theme';\r\nimport Routes from 'routes';\r\nimport { CustomSnackbar } from 'containers/containers/snackbar';\r\n\r\n\r\ninterface MainProps {\r\n  store: Store<ApplicationState>\r\n  history: History\r\n}\r\n\r\n\r\n// -- edit global layout here.\r\nconst App: React.FC<MainProps> = ({ store, history }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <ConnectedRouter history={history}>\r\n          <CssBaseline />\r\n          <CustomSnackbar />\r\n          <Routes />\r\n        </ConnectedRouter>\r\n      </ThemeProvider>\r\n    </Provider >\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport configureStore from 'configureStore';\r\n\r\nimport { history } from 'utilities/history';\r\n\r\nconst initialState = window.INITIAL_REDUX_STATE;    \r\nconst store = configureStore(history, initialState);\r\n\r\n\r\nReactDOM.render(\r\n    <App store={store} history={history} />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { Store, createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { History } from 'history';\r\nimport { loadState, saveState } from \"utilities/sessionStorage\";\r\n\r\n// Import the state interface and our combined reducers\r\nimport { ApplicationState, createRootReducer } from 'store';\r\nimport { routerMiddleware } from 'connected-react-router';\r\n\r\nexport default function configureStore(history: History, initialState: ApplicationState): Store<ApplicationState> {\r\n    const persistedState = loadState();\r\n    const composeEnhancers = composeWithDevTools({})\r\n\r\n    const store = createStore(\r\n        createRootReducer(history),\r\n        initialState,\r\n        composeEnhancers(applyMiddleware(routerMiddleware(history), thunk))\r\n    )\r\n\r\n    store.subscribe(() => {\r\n        saveState(store.getState());\r\n      })\r\n      \r\n    return store;\r\n}","export const loadState = () => {\r\n    try {\r\n        const serializedState = sessionStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state: any) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        sessionStorage.setItem('state', serializedState);\r\n    } catch (err) {\r\n\r\n    }\r\n}\r\n\r\n","import { combineReducers, Action } from 'redux';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { History } from 'history';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { IUiState, UiReducer } from './ui';\r\n\r\nexport type Thunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  ApplicationState,\r\n  null,\r\n  Action<string>\r\n>\r\nexport interface ApplicationState {\r\n  ui: IUiState,\r\n  router: any\r\n}\r\n\r\nexport const createRootReducer = (history: History) =>\r\n  combineReducers<ApplicationState>({\r\n    ui: UiReducer,\r\n    router: connectRouter(history)\r\n  })\r\n"],"sourceRoot":""}